spring:
  config:
    import: optional:file:.env[.properties]
  datasource:
    driver-class-name: org.h2.Driver
    url: jdbc:h2:mem:testdb
    username: sa
    password:
  
  h2:
    console:
      enabled: true
      path: /h2-console
      settings:
        web-allow-others: true
  
  jpa:
    database-platform: org.hibernate.dialect.H2Dialect
    hibernate:
      ddl-auto: create
    defer-datasource-initialization: true
    show-sql: false
    properties:
      hibernate:
        format_sql: false
        default_batch_fetch_size: 1000
  security:
    oauth2:
      client:
        registration:
          kakao:
            client-id: ${OAUTH2_KAKAO_CLIENT_ID}
            client-secret: ${OAUTH2_KAKAO_CLIENT_SECRET}
            redirect-uri: "${BACKEND_URL}/oauth/kakao/callback"
            authorization-grant-type: authorization_code
            client-authentication-method: client_secret_post
            client-name: Kakao
            scope:
              - profile_nickname
              - account_email
        provider:
          kakao:
            authorization-uri: ${OAUTH2_KAKAO_PROVIDER_AUTHORIZATION_URI}
            token-uri: ${OAUTH2_KAKAO_PROVIDER_TOKEN_URI}
            user-info-uri: ${OAUTH2_KAKAO_PROVIDER_USER_INFO_URI}
            user-name-attribute: id
    # Gmail SMTP 설정
  mail:
    host: smtp.gmail.com
    port: 587
    username: ${GMAIL_USERNAME}
    password: ${GMAIL_APP_PASSWORD}
    from-email: ${GMAIL_FROM_EMAIL:notify@spotit.co.kr}
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true
custom:
  app:
    frontend-url: ${FRONTEND_URL}
  jwt:
    accessToken:
      secret: ${JWT_ACCESS_TOKEN_SECRET}
      expirationSeconds: ${JWT_ACCESS_TOKEN_EXPIRATION_SECONDS}

app:
  sse:
    heartbeat:
      enabled: true          # SSE 하트비트 기능 활성화
      ping-interval: 30000   # 30초마다 ping 전송



logging:
  level:
    org.hibernate.SQL: INFO
    org.hibernate.type.descriptor.sql.BasicBinder: INFO